"use strict";(self.webpackChunkmediterraneus_docs=self.webpackChunkmediterraneus_docs||[]).push([[510],{7112:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var t=r(5893),s=r(1151);const o={sidebar_position:2},i="Running the protocol",c={id:"running-the-protocol",title:"Running the protocol",description:"Sofware requirements:",source:"@site/docs_mediterraneus/running-the-protocol.md",sourceDirName:".",slug:"/running-the-protocol",permalink:"/docs/running-the-protocol",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Mediterraneus",permalink:"/docs/intro"},next:{title:"User guide",permalink:"/docs/user-guide"}},d={},a=[];function l(e){const n={a:"a",code:"code",h1:"h1",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"running-the-protocol",children:"Running the protocol"}),"\n",(0,t.jsx)(n.p,{children:"Sofware requirements:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nodejs"}),", ",(0,t.jsx)(n.code,{children:"npm"}),", ",(0,t.jsx)(n.code,{children:"docker"}),", ",(0,t.jsx)(n.code,{children:"IPFS desktop"}),", ",(0,t.jsx)(n.code,{children:"cargo"}),", ",(0,t.jsx)(n.code,{children:"rustc"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"In the GitHub repositories, follow the instructions in the README to deploy the demo in the specified order."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/Cybersecurity-LINKS/mediterraneus-smart-contracts",children:(0,t.jsx)(n.strong,{children:"mediterraneus-smart-contracts"})}),", smart contracts for the Mediterraneus protocol,"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/Cybersecurity-LINKS/mediterraneus-issuer-rs",children:(0,t.jsx)(n.strong,{children:"mediterraneus-issuer-rs"})}),", Issuer of verifiable credentials using smart contracts to bind Externally Owned Accounts (EOAs) with Self-Sovereign Identities (SSI). Sample implementation for the Mediterraneus Protocol,"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/Cybersecurity-LINKS/mediterraneus-connector-rs",children:(0,t.jsx)(n.strong,{children:"mediterraneus-connector-rs"})}),", the connector  handles user identity and assets,"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/Cybersecurity-LINKS/mediterraneus-frontend",children:(0,t.jsx)(n.strong,{children:"mediterraneus-frontend"})}),", sample frontend application for interacting with the connector, issuer, and catalogue."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>i});var t=r(7294);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);