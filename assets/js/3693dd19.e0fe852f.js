"use strict";(self.webpackChunkmediterraneus_docs=self.webpackChunkmediterraneus_docs||[]).push([[972],{9951:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=i(5893),s=i(1151);const r={sidebar_position:2},l="Quick-start",o={id:"quick-start",title:"Quick-start",description:"Requirements",source:"@site/docs_embrave/quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/embrave/quick-start",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Embrave",permalink:"/embrave/intro"},next:{title:"Overview",permalink:"/embrave/overview"}},c={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Attester Requirements",id:"attester-requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Config file",id:"config-file",level:3},{value:"Remote Attestor Preparation",id:"remote-attestor-preparation",level:3},{value:"Execution",id:"execution",level:2},{value:"Join Service",id:"join-service",level:3},{value:"Verifier",id:"verifier",level:3},{value:"Attester Agent",id:"attester-agent",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"quick-start",children:"Quick-start"}),"\n",(0,t.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,t.jsx)(n.p,{children:"The following dependencies must be installed:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo apt-get install git make cmake gcc libssl-dev openssl\n"})}),"\n",(0,t.jsx)(n.p,{children:"and a preferred MQTT broker E.g Mosquitto"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo apt install mosquitto\n"})}),"\n",(0,t.jsx)(n.h2,{id:"attester-requirements",children:"Attester Requirements"}),"\n",(0,t.jsx)(n.p,{children:"The following dependencies must be installed specific for the Attester application."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"TPM2 Software Stack (TSS):"}),"\nInstall the required packages"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo apt -y install \\\n  autoconf-archive \\\n  libcmocka0 \\\n  libcmocka-dev \\\n  procps \\\n  iproute2 \\\n  build-essential \\\n  git \\\n  pkg-config \\\n  gcc \\\n  libtool \\\n  automake \\\n  libssl-dev \\\n  uthash-dev \\\n  autoconf \\\n  doxygen \\\n  libjson-c-dev \\\n  libini-config-dev \\\n  libcurl4-openssl-dev \\\n  uuid-dev \\\n  libltdl-dev \\\n  libusb-1.0-0-dev \\\n  libftdi-dev\n"})}),"\n",(0,t.jsx)(n.p,{children:"Install tpm2-tss software"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"git clone -n https://github.com/tpm2-software/tpm2-tss\ngit checkout 40485d368dbd8ad92c8c062ba38cd7eaa4489472\n./bootstrap\nsudo ./configure --prefix=/usr\nsudo make -j8\nsudo make install\nsudo ldconfig\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"TPM2 Access Broker & Resource Manager:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"git clone -n https://github.com/tpm2-software/tpm2-abrmd\ngit checkout b2b0795796ef5588155bf43919dd4d7bf73c3a01\n./bootstrap\n./configure --with-dbuspolicydir=/etc/dbus-1/system.d --with-systemdsystemunitdir=/usr/lib/systemd/system --libdir=/usr/lib --prefix=/usr\nsudo make -j$(nproc)\nsudo make install\nsudo udevadm control --reload-rules && sudo udevadm trigger\nsudo systemctl daemon-reload\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Dependencies of tpm2-tools:"}),"\ninstall the dependencies listed at this ",(0,t.jsx)(n.a,{href:"https://tpm2-tools.readthedocs.io/en/latest/INSTALL/",children:"link"})]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"git clone https://github.com/Cybersecurity-LINKS/embrave\ncd embrave\ngit submodule update --init --recursive\ncd lib/tpm2-tools\ngit checkout 4998ecfea817cd0efdd47bdf11a02dedab51c723\ncd ../../\nmkdir build\ncd build\ncmake ..\nsudo make \n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sudo make"})," command will build all the binaries. If the intention is to build only a specific compoents, the command is ",(0,t.jsx)(n.code,{children:"sudo make <target-name>"})," with targets defined as:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"attester-server"}),": The Attester component"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"verifier"}),": The Verifier component"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"join-service"}),": The Join Service component"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"config-file",children:"Config file"}),"\n",(0,t.jsxs)(n.p,{children:["Follow the instruction in the ",(0,t.jsx)(n.a,{href:"/embrave/config-file",children:(0,t.jsx)(n.code,{children:"config-file section"})})," to populate the config files"]}),"\n",(0,t.jsx)(n.p,{children:"TODO minimal configuration"}),"\n",(0,t.jsx)(n.h3,{id:"remote-attestor-preparation",children:"Remote Attestor Preparation"}),"\n",(0,t.jsx)(n.p,{children:"Copy the goldenvalue database to the path defined by the config file"}),"\n",(0,t.jsx)(n.h2,{id:"execution",children:"Execution"}),"\n",(0,t.jsx)(n.p,{children:"First run the chosen MQTT client on a trusted device in the group, e.g."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"mosquitto -v\n"})}),"\n",(0,t.jsx)(n.h3,{id:"join-service",children:"Join Service"}),"\n",(0,t.jsx)(n.p,{children:"Run the Join Service in a trusted device"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo ./join_service.build/join_service\n"})}),"\n",(0,t.jsx)(n.h3,{id:"verifier",children:"Verifier"}),"\n",(0,t.jsx)(n.p,{children:"Run the Verifier in a trusted device"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo ./verifier.build/verifier\n"})}),"\n",(0,t.jsx)(n.h3,{id:"attester-agent",children:"Attester Agent"}),"\n",(0,t.jsx)(n.p,{children:"Run the Attester Agent in the device to be attested"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo ./agent.build/attester_server\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>l});var t=i(7294);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);